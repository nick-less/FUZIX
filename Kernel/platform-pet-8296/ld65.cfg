MEMORY {
	RAMZ:	start = $0000, size = $0100, type = rw, fill = yes;
	STACK:	start = $0100, size = $0100, type = rw, fill = yes;
	RAML:	start = $0200, size = $1E00, type = rw, fill = yes;
	RAM0:	start = $2000, size = $6000, type = rw, fill = yes;
	VID:    start = $8000, size = $1000, type = rw, fill = yes fillval=$20;
	RAM1:	start = $9000, size = $6F80, type = rw, fill = yes;
#	INIT:	start = $D000, size = $0800, type = rw, fill = yes;
#	DISC:	start = $D800, size = $1800, type = rw, fill = yes;
	IO:	start = $FF80, size = $7a, type = rw, fill = yes;

	RAM2:	start = $FFFA, size = $0006, type = rw, fill = yes;
}

SEGMENTS {
	ZEROPAGE:	load = RAMZ, type = zp, define = yes;

	START:		load = RAM0, type = ro;


	COMMONDATA: 	load = RAML, type = bss;
	COMMONMEM: 	load = RAML, type = rw;
	RODATA:		load = RAML, type = ro;
	CODE:		load = RAML, type = ro, define = yes;
	DATA:		load = RAM0, type = rw, define = yes;


	SEG1:		load = RAM1, type = ro;
	SEG2:		load = RAM0, type = ro;
	SEG3:		load = RAM0, type = ro;
	SEG4:		load = RAM0, type = ro;
	SYS1:		load = RAM0, type = ro;
	SYS2:		load = RAM0, type = ro;
	SYS3:		load = RAM0, type = ro;
	SYS4:		load = RAM1, type = ro;
	SYS5:		load = RAM1, type = ro;


	BSS:		load = RAM1, type = bss, define = yes;

	DISCARD: 	load = RAM1, type = ro;
	DISCARDDATA: 	load = RAM1, type = rw;

	VECTORS: 	load = RAM2, type = ro;
}

FILES {
	%O: format = bin;
}
