Fuzix development branch for the (currently unfinished) RCbus
NS32K board.

Flat ROM in the low 32K, RAM follows.

I/O via RCbus devices with the I/O window mapped as 00F0XXXX

Devices in emulator
- IDE at 0x10 (shadow 0x90)
- PPIDE at 0x20
- 16x50 (interrupt driven) at 0xC0
- RTC at 0x0C
- Wiznet at 28

No MMU, no vectored interrupt controller, need to add a timer
tick source.

Status
- We have a boot ROM of sorts to test ideas
- A basic image compiles
- We get to the bootdev prompt run the first serial int and cras
- User space builds but is not yet loadable

Things To Do

Kernel Side
DONE - 16x50 driver
DONE - IDE flat driver code
- Wire up an emulated timer
DONE - Write the setup code
DONE - Write the initial module code
DEBUG - Write the interrupt code
DEBUG - Write the trap handlers
- Check how we should handle trace/trap bits and interrupts
- Should we use the stack or register based calling convention ?
- Understand what FPU would involve

User Side
DONE - Setjmp/Longjmp
- Make syscall match kernel version ?
- What is needed for binary relocations ?
- Try and build and bootstrap some userspace

