Fuzix development branch for the (currently unfinished) RCbus
NS32K board.

Flat ROM in the low 32K, RAM follows.

I/O via RCbus devices with the I/O window mapped as 00F0XXXX

Devices in emulator
- IDE at 0x10 (shadow 0x90)
- PPIDE at 0x20
- 16x50 (interrupt driven) at 0xC0
- RTC at 0x0C
- Wiznet at 28

No MMU, no vectored interrupt controller, need to add a timer
tick source.

Status
- We have a boot ROM of sorts to test ideas
- A basic image compiles
- We get to the bootdev prompt
- You can load init and it begins running and runs a few
  system calls before exploding

Things To Do

Kernel Side
DONE - 16x50 driver
DONE - IDE flat driver code
- Wire up an emulated timer
DONE - Write the setup code
DONE - Write the initial module code
DONE - Write the interrupt code
DEBUG - Write the trap handlers
- Check how we should handle trace/trap bits and interrupts
STACK - Should we use the stack or register based calling convention ?
- Understand what FPU would involve
- Chip features - usp v sp loading

User Side
DONE - Setjmp/Longjmp
DONE - What is needed for binary relocations ?
DONE - Try and build and bootstrap some userspace
DONE - Make syscall match kernel version ?
DONE - Debug syscall paths

Crashes after loading the inittab trying to brk to a nonsense
value as if idata was mangled somehow
